unit RoomerTableDefinitions;

interface

uses System.Generics.Collections;

type

  TRoomAmenity = class
  private
    FCode: String;
    FDescription: String;
  public
    constructor Create(_Code, _Description : String);
    property Code : String read FCode write FCode;
    property Description : String read FDescription write FDescription;
  end;

  TRoom = class
  private
    FLocation: String;
    FRoom: String;
    FWildCard: Boolean;
    FSquareMeters: Integer;
    FEquipments: String;
    FHidden: Boolean;
    FFloor: Integer;
    FID: String;
    FStatus: Char;
    FBookable: Boolean;
    FDescription: String;
    FStatistics: Boolean;
    FUseInNationalReports: Boolean;
    FActive: Boolean;
    FRoomType: String;
    FOrderIndex: Integer;
    FRoomAmenities: TList<TRoomAmenity>;
  public
    constructor Create(_ID, _Room, _Description, _RoomType, _Equipments, _Location : String; _Status : Char;
                       _Active, _WildCard, _Bookable, _Statistics, _Hidden, _UseInNationalReports : Boolean;
                       _Floor, _OrderIndex, _SquareMeters : Integer);
    destructor Destroy; override;

    property ID : String read FID write FID;
    property Room : String read FRoom write FRoom;
    property Description : String read FDescription write FDescription;
    property RoomType : String read FRoomType write FRoomType;
    property Equipments : String read FEquipments write FEquipments;
    property Location : String read FLocation write FLocation;

    property Status : Char read FStatus write FStatus;

    property Active : Boolean read FActive write FActive;
    property WildCard : Boolean read FWildCard write FWildCard;
    property Bookable : Boolean read FBookable write FBookable;
    property Statistics : Boolean read FStatistics write FStatistics;
    property Hidden : Boolean read FHidden write FHidden;
    property UseInNationalReports : Boolean read FUseInNationalReports write FUseInNationalReports;

    property Floor : Integer read FFloor write FFloor;
    property OrderIndex : Integer read FOrderIndex write FOrderIndex;
    property SquareMeters : Integer read FSquareMeters write FSquareMeters;

    property RoomAmenities : TList<TRoomAmenity> read FRoomAmenities;
  end;

  TInvoiceLine = class
  public
    ID : Integer;
    AutoGen : String;
    Reservation : Integer;
    RoomReservation : Integer;
    SplitNumber : Integer;
    ItemNumber : Integer;
    PurchaseDate : TDateTime;
    InvoiceNumber : Integer;
    ItemID : String;
    Number : Double;
    Description : String;
    Price : Double;
    VATType : String;
    Total : Double;
    TotalWOVat : Double;
    Vat : Double;
    AutoGenerated : Boolean;
    CurrencyRate : Double;
    Currency : String;
    ReportDate : TDateTime;
    ReportTime : String;
    Persons : Integer;
    Nights : Integer;
    BreakfastPrice : Double;
    Ayear : Integer;
    Amon : Integer;
    Aday : Integer;
    ilAccountKey : String;
    ItemCurrency : String;
    ItemCurrencyRate : Double;
    Discount : Double;
    Discount_isprecent : Boolean;
    ImportRefrence : String;
    ImportSource : String;
    isPackage : Boolean;
    invoicelinescol : TDateTime;
    itemAdded : TDateTime;
    confirmDate : TDateTime;
    confirmAmount : Double;
    RoomReservationAlias : Integer;

    constructor Create(_ID : Integer;
                      _AutoGen : String;
                      _Reservation : Integer;
                      _RoomReservation : Integer;
                      _SplitNumber : Integer;
                      _ItemNumber : Integer;
                      _PurchaseDate : TDateTime;
                      _InvoiceNumber : Integer;
                      _ItemID : String;
                      _Number : Double;
                      _Description : String;
                      _Price : Double;
                      _VATType : String;
                      _Total : Double;
                      _TotalWOVat : Double;
                      _Vat : Double;
                      _AutoGenerated : Boolean;
                      _CurrencyRate : Double;
                      _Currency : String;
                      _ReportDate : TDateTime;
                      _ReportTime : String;
                      _Persons : Integer;
                      _Nights : Integer;
                      _BreakfastPrice : Double;
                      _Ayear : Integer;
                      _Amon : Integer;
                      _Aday : Integer;
                      _ilAccountKey : String;
                      _ItemCurrency : String;
                      _ItemCurrencyRate : Double;
                      _Discount : Double;
                      _Discount_isprecent : Boolean;
                      _ImportRefrence : String;
                      _ImportSource : String;
                      _isPackage : Boolean;
                      _invoicelinescol : TDateTime;
                      _itemAdded : TDateTime;
                      _confirmDate : TDateTime;
                      _confirmAmount : Double;
                      _RoomReservationAlias : Integer);
  end;

  TInvoice = class
  public
    ID : Integer;
    Reservation : Integer;
    RoomReservation : Integer;
    SplitNumber : Integer;
    InvoiceNumber : Integer;
    InvoiceDate : TDateTime;
    Customer : String;
    Name : String;
    Address1 : String;
    Address2 : String;
    Address3 : String;
    Address4 : String;
    Country : String;
    Total : Double;
    TotalWOVAT : Double;
    TotalVAT : Double;
    TotalBreakFast : Double;
    ExtraText : String;
    Finished : Boolean;
    ReportDate : TDateTime;
    ReportTime : String;
    CreditInvoice : Integer;
    OriginalInvoice : Integer;
    InvoiceType : Integer;
    custPID : String;
    RoomGuest : String;
    ihDate : TDateTime;
    ihStaff : String;
    ihPayDate : TDateTime;
    ihConfirmDate : TDateTime;
    ihInvoiceDate : TDateTime;
    ihCurrency : String;
    ihCurrencyRate : Double;
    invRefrence : String;
    TotalStayTax : Double;
    TotalStayTaxNights : Integer;
    showPackage : Boolean;
    location : String;

    Lines : TList<TInvoiceLine>;

    constructor Create(_ID : Integer;
                        _Reservation : Integer;
                        _RoomReservation : Integer;
                        _SplitNumber : Integer;
                        _InvoiceNumber : Integer;
                        _InvoiceDate : TDateTime;
                        _Customer : String;
                        _Name : String;
                        _Address1 : String;
                        _Address2 : String;
                        _Address3 : String;
                        _Address4 : String;
                        _Country : String;
                        _Total : Double;
                        _TotalWOVAT : Double;
                        _TotalVAT : Double;
                        _TotalBreakFast : Double;
                        _ExtraText : String;
                        _Finished : Boolean;
                        _ReportDate : TDateTime;
                        _ReportTime : String;
                        _CreditInvoice : Integer;
                        _OriginalInvoice : Integer;
                        _InvoiceType : Integer;
                        _custPID : String;
                        _RoomGuest : String;
                        _ihDate : TDateTime;
                        _ihStaff : String;
                        _ihPayDate : TDateTime;
                        _ihConfirmDate : TDateTime;
                        _ihInvoiceDate : TDateTime;
                        _ihCurrency : String;
                        _ihCurrencyRate : Double;
                        _invRefrence : String;
                        _TotalStayTax : Double;
                        _TotalStayTaxNights : Integer;
                        _showPackage : Boolean;
                        _location : String);
  end;

  TDay = class
  public
    Id : Integer;
    ADate : TDateTime;
    Room : String;
    RoomType : String;
    RoomReservation : Integer;
    Reservation : Integer;
    ResFlag : Char;
    updated : Boolean;
    isNoRoom : Boolean;
    PriceCode : String;
    RoomRate : Double;
    Currency : String;
    Discount : Double;
    isPercentage : Boolean;
    showDiscount : Boolean;
    Paid : Boolean;
    confirmDate : TDateTime;
    confirmAmount : Double;
    confirmCurrencyRate : Double;
    invoicenumber : Integer;
    confirmDiscount : Double;
    confirmTax : Double;

    constructor Create(_Id : Integer;
                      _ADate : TDateTime;
                      _Room : String;
                      _RoomType : String;
                      _RoomReservation : Integer;
                      _Reservation : Integer;
                      _ResFlag : Char;
                      _updated : Boolean;
                      _isNoRoom : Boolean;
                      _PriceCode : String;
                      _RoomRate : Double;
                      _Currency : String;
                      _Discount : Double;
                      _isPercentage : Boolean;
                      _showDiscount : Boolean;
                      _Paid : Boolean;
                      _confirmDate : TDateTime;
                      _confirmAmount : Double;
                      _confirmCurrencyRate : Double;
                      _invoicenumber : Integer;
                      _confirmDiscount : Double;
                      _confirmTax : Double);
  end;

  TPerson = class
  public
    ID : Integer;
    Person : Integer;
    RoomReservation : Integer;
    Reservation : Integer;
    title : String;
    Name : String;
    Surname : String;
    Address1 : String;
    Address2 : String;
    Address3 : String;
    Address4 : String;
    Country : String;
    Company : String;
    Tel1 : String;
    Tel2 : String;
    Fax : String;
    Email : String;
    GuestType : String;
    Information : String;
    PID : String;
    MainName : Boolean;
    Customer : String;
    state : String;
    sourceId : String;

    constructor Create(_ID : Integer;
                      _Person : Integer;
                      _RoomReservation : Integer;
                      _Reservation : Integer;
                      _title : String;
                      _Name : String;
                      _Surname : String;
                      _Address1 : String;
                      _Address2 : String;
                      _Address3 : String;
                      _Address4 : String;
                      _Country : String;
                      _Company : String;
                      _Tel1 : String;
                      _Tel2 : String;
                      _Fax : String;
                      _Email : String;
                      _GuestType : String;
                      _Information : String;
                      _PID : String;
                      _MainName : Boolean;
                      _Customer : String;
                      _state : String;
                      _sourceId : String);
  end;

  TRoomReservation = class
  public
    ID : Integer;
    RoomReservation : Integer;
    Room : String;
    Reservation : Integer;
    Status : String;
    GroupAccount : Boolean;
    invBreakfast : Boolean;
    Currency : String;
    Discount : Double;
    Percentage : Boolean;
    PriceType : String;
    Arrival : String;
    Departure : String;
    RoomType : String;
    PMInfo : String;
    HiddenInfo : String;
    RoomRentPaymentInvoice : Integer;
    Hallres : Integer;
    rrDescription : String;
    rrIsNoRoom : Boolean;
    rrDeparture : TDateTime;
    rrArrival : TDateTime;
    rrRoomTypeAlias : String;
    rrRoomAlias : String;
    useStayTax : Boolean;
    useinNationalReport : Boolean;
    numGuests : Integer;
    numChildren : Integer;
    numInfants : Integer;
    AverageRate : Double;
    RateCount : Integer;
    dtCreated : TDateTime;
    RoomClass : String;
    colorId : Integer;
    ratePlanCode : String;
    percentageDeposit : Double;
    fixedDeposit : Double;
    depositsInfo : String;
    penaltiesInfo : String;
    checkoutEventProcessed : Boolean;
    COMMISSION : Double;
    COMMISSION_CURRENCY : String;
    CHANNEL_ROOM_RES_ID : String;
    Package : String;
    blockMove : Boolean;

    CodedColor : String;

  public
    MainGuestIndex : Integer;
    Days : TList<TDay>;
    Guests : TList<TPerson>;
    OpenInvoices : TList<TInvoice>;
    ClosedInvoices : TList<TInvoice>;

    constructor Create(_ID : Integer;
                      _RoomReservation : Integer;
                      _Room : String;
                      _Reservation : Integer;
                      _Status : String;
                      _GroupAccount : Boolean;
                      _invBreakfast : Boolean;
                      _Currency : String;
                      _Discount : Double;
                      _Percentage : Boolean;
                      _PriceType : String;
                      _Arrival : String;
                      _Departure : String;
                      _RoomType : String;
                      _PMInfo : String;
                      _HiddenInfo : String;
                      _RoomRentPaymentInvoice : Integer;
                      _Hallres : Integer;
                      _rrDescription : String;
                      _rrIsNoRoom : Boolean;
                      _rrDeparture : TDateTime;
                      _rrArrival : TDateTime;
                      _rrRoomTypeAlias : String;
                      _rrRoomAlias : String;
                      _useStayTax : Boolean;
                      _useinNationalReport : Boolean;
                      _numGuests : Integer;
                      _numChildren : Integer;
                      _numInfants : Integer;
                      _AverageRate : Double;
                      _RateCount : Integer;
                      _dtCreated : TDateTime;
                      _RoomClass : String;
                      _colorId : Integer;
                      _ratePlanCode : String;
                      _percentageDeposit : Double;
                      _fixedDeposit : Double;
                      _depositsInfo : String;
                      _penaltiesInfo : String;
                      _checkoutEventProcessed : Boolean;
                      _COMMISSION : Double;
                      _COMMISSION_CURRENCY : String;
                      _CHANNEL_ROOM_RES_ID : String;
                      _Package : String;
                      _blockMove : Boolean;

                      _CodedColor : String);

  end;

  TReservation = class
  public
    ID : Integer;
    Reservation : Integer;
    Customer : String;
    Name : String;
    Address1 : String;
    Address2 : String;
    Address3 : String;
    Address4 : String;
    Country : String;
    Tel1 : String;
    Tel2 : String;
    Fax : String;
    Status : String;
    ReservationDate : String;
    Staff : String;
    Information : String;
    PMInfo : String;
    HiddenInfo : String;
    RoomRentPaid1 : Double;
    RoomRentPaid2 : Double;
    RoomRentPaid3 : Double;
    RoomRentPaymentInvoice : Integer;
    ContactName : String;
    ContactPhone : String;
    ContactPhone2 : String;
    ContactFax : String;
    ContactAddress1 : String;
    ContactAddress2 : String;
    ContactAddress3 : String;
    ContactAddress4 : String;
    ContactCountry : String;
    ContactEmail : String;
    inputsource : Char;
    webconfirmed : Char;
    arrivaltime : String;
    srcrequest : String;
    CustPID : String;
    invRefrence : String;
    marketSegment : String;
    CustomerEmail : String;
    CustomerWebsite : String;
    useStayTax : Boolean;
    channel : Integer;
    eventsProcessed : Boolean;
    alteredReservation : Boolean;
    externalIds : String;
    dtCreated : TDateTime;
    notificationRead : Boolean;
    outOfOrderBlocking : Boolean;

  public
    Rooms : TList<TRoomReservation>;
    OpenInvoices : TList<TInvoice>;
    ClosedInvoices : TList<TInvoice>;

    constructor Create(_ID : Integer;
                        _Reservation : Integer;
                        _Customer : String;
                        _Name : String;
                        _Address1 : String;
                        _Address2 : String;
                        _Address3 : String;
                        _Address4 : String;
                        _Country : String;
                        _Tel1 : String;
                        _Tel2 : String;
                        _Fax : String;
                        _Status : String;
                        _ReservationDate : String;
                        _Staff : String;
                        _Information : String;
                        _PMInfo : String;
                        _HiddenInfo : String;
                        _RoomRentPaid1 : Double;
                        _RoomRentPaid2 : Double;
                        _RoomRentPaid3 : Double;
                        _RoomRentPaymentInvoice : Integer;
                        _ContactName : String;
                        _ContactPhone : String;
                        _ContactPhone2 : String;
                        _ContactFax : String;
                        _ContactAddress1 : String;
                        _ContactAddress2 : String;
                        _ContactAddress3 : String;
                        _ContactAddress4 : String;
                        _ContactCountry : String;
                        _ContactEmail : String;
                        _inputsource : Char;
                        _webconfirmed : Char;
                        _arrivaltime : String;
                        _srcrequest : String;
                        _CustPID : String;
                        _invRefrence : String;
                        _marketSegment : String;
                        _CustomerEmail : String;
                        _CustomerWebsite : String;
                        _useStayTax : Boolean;
                        _channel : Integer;
                        _eventsProcessed : Boolean;
                        _alteredReservation : Boolean;
                        _externalIds : String;
                        _dtCreated : TDateTime;
                        _notificationRead : Boolean;
                        _outOfOrderBlocking : Boolean);
  end;

var

   RoomAmenities : TList<TRoomAmenity>;
   Rooms : TList<TRoom>;

implementation

{ TRoomAmenities }

constructor TRoomAmenity.Create(_Code, _Description: String);
begin
  inherited Create;
  FCode := _Code;
  FDescription := _Description;
end;

{ TRoom }

constructor TRoom.Create(_ID, _Room, _Description, _RoomType, _Equipments, _Location: String; _Status: Char; _Active, _WildCard, _Bookable, _Statistics, _Hidden, _UseInNationalReports : Boolean; _Floor, _OrderIndex, _SquareMeters: Integer);
begin
  inherited Create;
  FID := _ID;
  FRoom := _Room;
  FDescription := _Description;
  FRoomType := _RoomType;
  FEquipments := _Equipments;
  FLocation := _Location;
  FStatus := _Status;
  FActive := _Active;
  FWildCard := _WildCard;
  FBookable := _Bookable;
  FStatistics := _Statistics;
  FHidden := _Hidden;
  FUseInNationalReports := _UseInNationalReports;
  FFloor := _Floor;
  FOrderIndex := _OrderIndex;
  FSquareMeters := _SquareMeters;

  FRoomAmenities := TList<TRoomAmenity>.Create;
end;

destructor TRoom.Destroy;
begin
  RoomAmenities.Clear;
  RoomAmenities.Free;
end;

{ TRoomReservation }

constructor TRoomReservation.Create(_ID, _RoomReservation: Integer; _Room: String; _Reservation: Integer; _Status: String; _GroupAccount, _invBreakfast: Boolean; _Currency: String; _Discount: Double; _Percentage: Boolean; _PriceType, _Arrival, _Departure,
  _RoomType, _PMInfo, _HiddenInfo: String; _RoomRentPaymentInvoice, _Hallres: Integer; _rrDescription: String; _rrIsNoRoom: Boolean; _rrDeparture, _rrArrival: TDateTime; _rrRoomTypeAlias, _rrRoomAlias: String; _useStayTax, _useinNationalReport: Boolean;
  _numGuests, _numChildren, _numInfants: Integer; _AverageRate: Double; _RateCount: Integer; _dtCreated: TDateTime; _RoomClass: String; _colorId: Integer; _ratePlanCode: String; _percentageDeposit, _fixedDeposit: Double; _depositsInfo, _penaltiesInfo: String;
  _checkoutEventProcessed: Boolean; _COMMISSION: Double; _COMMISSION_CURRENCY, _CHANNEL_ROOM_RES_ID, _Package: String; _blockMove: Boolean; _CodedColor: String);
begin
  MainGuestIndex := 0;
  Days := TList<TDay>.Create;
  Guests := TList<TPerson>.Create;
  OpenInvoices := TList<TInvoice>.Create;
  ClosedInvoices := TList<TInvoice>.Create;

  ID := _ID;
  RoomReservation := _RoomReservation;
  Room := _Room;
  Reservation := _Reservation;
  Status := _Status;
  GroupAccount := _GroupAccount;
  invBreakfast := _invBreakfast;
  Currency := _Currency;
  Discount := _Discount;
  Percentage := _Percentage;
  PriceType := _PriceType;
  Arrival := _Arrival;
  Departure := _Departure;
  RoomType := _RoomType;
  PMInfo := _PMInfo;
  HiddenInfo := _HiddenInfo;
  RoomRentPaymentInvoice := _RoomRentPaymentInvoice;
  Hallres := _Hallres;
  rrDescription := _rrDescription;
  rrIsNoRoom := _rrIsNoRoom;
  rrDeparture := _rrDeparture;
  rrArrival := _rrArrival;
  rrRoomTypeAlias := _rrRoomTypeAlias;
  rrRoomAlias := _rrRoomAlias;
  useStayTax := _useStayTax;
  useinNationalReport := _useinNationalReport;
  numGuests := _numGuests;
  numChildren := _numChildren;
  numInfants := _numInfants;
  AverageRate := _AverageRate;
  RateCount := _RateCount;
  dtCreated := _dtCreated;
  RoomClass := _RoomClass;
  colorId := _colorId;
  ratePlanCode := _ratePlanCode;
  percentageDeposit := _percentageDeposit;
  fixedDeposit := _fixedDeposit;
  depositsInfo := _depositsInfo;
  penaltiesInfo := _penaltiesInfo;
  checkoutEventProcessed := _checkoutEventProcessed;
  COMMISSION := _COMMISSION;
  COMMISSION_CURRENCY := _COMMISSION_CURRENCY;
  CHANNEL_ROOM_RES_ID := _CHANNEL_ROOM_RES_ID;
  Package := _Package;
  blockMove := _blockMove;

  CodedColor := _CodedColor;
end;

{ TPerson }

constructor TPerson.Create(_ID, _Person, _RoomReservation, _Reservation: Integer; _title, _Name, _Surname, _Address1, _Address2, _Address3, _Address4, _Country, _Company, _Tel1, _Tel2, _Fax, _Email, _GuestType, _Information, _PID: String; _MainName: Boolean;
  _Customer, _state, _sourceId: String);
begin
  ID := _ID;
  Person := _Person;
  RoomReservation := _RoomReservation;
  Reservation := _Reservation;
  title := _title;
  Name := _Name;
  Surname := _Surname;
  Address1 := _Address1;
  Address2 := _Address2;
  Address3 := _Address3;
  Address4 := _Address4;
  Country := _Country;
  Company := _Company;
  Tel1 := _Tel1;
  Tel2 := _Tel2;
  Fax := _Fax;
  Email := _Email;
  GuestType := _GuestType;
  Information := _Information;
  PID := _PID;
  MainName := _MainName;
  Customer := _Customer;
  state := _state;
  sourceId := _sourceId;
end;

{ TDay }

constructor TDay.Create(_Id: Integer; _ADate: TDateTime; _Room, _RoomType: String; _RoomReservation, _Reservation: Integer; _ResFlag: Char; _updated, _isNoRoom: Boolean; _PriceCode: String; _RoomRate: Double; _Currency: String; _Discount: Double;
  _isPercentage, _showDiscount, _Paid: Boolean; _confirmDate: TDateTime; _confirmAmount, _confirmCurrencyRate: Double; _invoicenumber: Integer; _confirmDiscount, _confirmTax: Double);
begin
  Id := _Id;
  ADate := _ADate;
  Room := _Room;
  RoomType := _RoomType;
  RoomReservation := _RoomReservation;
  Reservation := _Reservation;
  ResFlag := _ResFlag;
  updated := _updated;
  isNoRoom := _isNoRoom;
  PriceCode := _PriceCode;
  RoomRate := _RoomRate;
  Currency := _Currency;
  Discount := _Discount;
  isPercentage := _isPercentage;
  showDiscount := _showDiscount;
  Paid := _Paid;
  confirmDate := _confirmDate;
  confirmAmount := _confirmAmount;
  confirmCurrencyRate := _confirmCurrencyRate;
  invoicenumber := _invoicenumber;
  confirmDiscount := _confirmDiscount;
  confirmTax := _confirmTax;
end;

{ TInvoice }

constructor TInvoice.Create(_ID, _Reservation, _RoomReservation, _SplitNumber, _InvoiceNumber: Integer; _InvoiceDate: TDateTime; _Customer, _Name, _Address1, _Address2, _Address3, _Address4, _Country: String; _Total, _TotalWOVAT, _TotalVAT,
  _TotalBreakFast: Double; _ExtraText: String; _Finished: Boolean; _ReportDate: TDateTime; _ReportTime: String; _CreditInvoice, _OriginalInvoice, _InvoiceType: Integer; _custPID, _RoomGuest: String; _ihDate: TDateTime; _ihStaff: String; _ihPayDate,
  _ihConfirmDate, _ihInvoiceDate: TDateTime; _ihCurrency: String; _ihCurrencyRate: Double; _invRefrence: String; _TotalStayTax: Double; _TotalStayTaxNights: Integer; _showPackage: Boolean; _location: String);
begin
  Lines := TList<TInvoiceLine>.Create;

  ID := _ID;
  Reservation := _Reservation;
  RoomReservation := _RoomReservation;
  SplitNumber := _SplitNumber;
  InvoiceNumber := _InvoiceNumber;
  InvoiceDate := _InvoiceDate;
  Customer := _Customer;
  Name := _Name;
  Address1 := _Address1;
  Address2 := _Address2;
  Address3 := _Address3;
  Address4 := _Address4;
  Country := _Country;
  Total := _Total;
  TotalWOVAT := _TotalWOVAT;
  TotalVAT := _TotalVAT;
  TotalBreakFast := _TotalBreakFast;
  ExtraText := _ExtraText;
  Finished := _Finished;
  ReportDate := _ReportDate;
  ReportTime := _ReportTime;
  CreditInvoice := _CreditInvoice;
  OriginalInvoice := _OriginalInvoice;
  InvoiceType := _InvoiceType;
  custPID := _custPID;
  RoomGuest := _RoomGuest;
  ihDate := _ihDate;
  ihStaff := _ihStaff;
  ihPayDate := _ihPayDate;
  ihConfirmDate := _ihConfirmDate;
  ihInvoiceDate := _ihInvoiceDate;
  ihCurrency := _ihCurrency;
  ihCurrencyRate := _ihCurrencyRate;
  invRefrence := _invRefrence;
  TotalStayTax := _TotalStayTax;
  TotalStayTaxNights := _TotalStayTaxNights;
  showPackage := _showPackage;
  location := _location;
end;

{ TInvoiceLine }

constructor TInvoiceLine.Create(_ID: Integer; _AutoGen: String; _Reservation, _RoomReservation, _SplitNumber, _ItemNumber: Integer; _PurchaseDate: TDateTime; _InvoiceNumber: Integer; _ItemID: String; _Number: Double; _Description: String; _Price: Double;
  _VATType: String; _Total, _TotalWOVat, _Vat: Double; _AutoGenerated: Boolean; _CurrencyRate: Double; _Currency: String; _ReportDate: TDateTime; _ReportTime: String; _Persons, _Nights: Integer; _BreakfastPrice: Double; _Ayear, _Amon, _Aday: Integer;
  _ilAccountKey, _ItemCurrency: String; _ItemCurrencyRate, _Discount: Double; _Discount_isprecent: Boolean; _ImportRefrence, _ImportSource: String; _isPackage: Boolean; _invoicelinescol, _itemAdded, _confirmDate: TDateTime; _confirmAmount: Double;
  _RoomReservationAlias: Integer);
begin
  ID := _ID;
  AutoGen := _AutoGen;
  Reservation := _Reservation;
  RoomReservation := _RoomReservation;
  SplitNumber := _SplitNumber;
  ItemNumber := _ItemNumber;
  PurchaseDate := _PurchaseDate;
  InvoiceNumber := _InvoiceNumber;
  ItemID := _ItemID;
  Number := _Number;
  Description := _Description;
  Price := _Price;
  VATType := _VATType;
  Total := _Total;
  TotalWOVat := _TotalWOVat;
  Vat := _Vat;
  AutoGenerated := _AutoGenerated;
  CurrencyRate := _CurrencyRate;
  Currency := _Currency;
  ReportDate := _ReportDate;
  ReportTime := _ReportTime;
  Persons := _Persons;
  Nights := _Nights;
  BreakfastPrice := _BreakfastPrice;
  Ayear := _Ayear;
  Amon := _Amon;
  Aday := _Aday;
  ilAccountKey := _ilAccountKey;
  ItemCurrency := _ItemCurrency;
  ItemCurrencyRate := _ItemCurrencyRate;
  Discount := _Discount;
  Discount_isprecent := _Discount_isprecent;
  ImportRefrence := _ImportRefrence;
  ImportSource := _ImportSource;
  isPackage := _isPackage;
  invoicelinescol := _invoicelinescol;
  itemAdded := _itemAdded;
  confirmDate := _confirmDate;
  confirmAmount := _confirmAmount;
  RoomReservationAlias := _RoomReservationAlias;
end;

{ TReservation }

constructor TReservation.Create(_ID, _Reservation: Integer; _Customer, _Name, _Address1, _Address2, _Address3, _Address4, _Country, _Tel1, _Tel2, _Fax, _Status, _ReservationDate, _Staff, _Information, _PMInfo, _HiddenInfo: String; _RoomRentPaid1,
  _RoomRentPaid2, _RoomRentPaid3: Double; _RoomRentPaymentInvoice: Integer; _ContactName, _ContactPhone, _ContactPhone2, _ContactFax, _ContactAddress1, _ContactAddress2, _ContactAddress3, _ContactAddress4, _ContactCountry, _ContactEmail: String; _inputsource,
  _webconfirmed: Char; _arrivaltime, _srcrequest, _CustPID, _invRefrence, _marketSegment, _CustomerEmail, _CustomerWebsite: String; _useStayTax: Boolean; _channel: Integer; _eventsProcessed, _alteredReservation: Boolean; _externalIds: String;
  _dtCreated: TDateTime; _notificationRead, _outOfOrderBlocking: Boolean);
begin
  Rooms := TList<TRoomReservation>.Create;
  OpenInvoices := TList<TInvoice>.Create;
  ClosedInvoices := TList<TInvoice>.Create;

  ID := _ID;
  Reservation := _Reservation;
  Customer := _Customer;
  Name := _Name;
  Address1 := _Address1;
  Address2 := _Address2;
  Address3 := _Address3;
  Address4 := _Address4;
  Country := _Country;
  Tel1 := _Tel1;
  Tel2 := _Tel2;
  Fax := _Fax;
  Status := _Status;
  ReservationDate := _ReservationDate;
  Staff := _Staff;
  Information := _Information;
  PMInfo := _PMInfo;
  HiddenInfo := _HiddenInfo;
  RoomRentPaid1 := _RoomRentPaid1;
  RoomRentPaid2 := _RoomRentPaid2;
  RoomRentPaid3 := _RoomRentPaid3;
  RoomRentPaymentInvoice := _RoomRentPaymentInvoice;
  ContactName := _ContactName;
  ContactPhone := _ContactPhone;
  ContactPhone2 := _ContactPhone2;
  ContactFax := _ContactFax;
  ContactAddress1 := _ContactAddress1;
  ContactAddress2 := _ContactAddress2;
  ContactAddress3 := _ContactAddress3;
  ContactAddress4 := _ContactAddress4;
  ContactCountry := _ContactCountry;
  ContactEmail := _ContactEmail;
  inputsource := _inputsource;
  webconfirmed := _webconfirmed;
  arrivaltime := _arrivaltime;
  srcrequest := _srcrequest;
  CustPID := _CustPID;
  invRefrence := _invRefrence;
  marketSegment := _marketSegment;
  CustomerEmail := _CustomerEmail;
  CustomerWebsite := _CustomerWebsite;
  useStayTax := _useStayTax;
  channel := _channel;
  eventsProcessed := _eventsProcessed;
  alteredReservation := _alteredReservation;
  externalIds := _externalIds;
  dtCreated := _dtCreated;
  notificationRead := _notificationRead;
  outOfOrderBlocking := _outOfOrderBlocking;

end;

end.


